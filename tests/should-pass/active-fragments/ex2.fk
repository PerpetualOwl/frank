-- #desc   Mixing in some shadowed interface instantiations to make sure they don't matter
-- #return 6

data Bool = true | false
interface State X = put: X -> Unit
                  | get: X

intStateTrafo: {<State Unit, State Int>X -> [State Bool, State Int]X}
intStateTrafo <put n -> k> = put (n+n); intStateTrafo (k unit)
intStateTrafo <get -> k> = let n = get! - 1 in intStateTrafo (k n)
intStateTrafo x = x

stateHandler: {Y -> <State Int, State Y>X -> X}
stateHandler _ <put s' -> k> = stateHandler s' (k unit)
stateHandler s <get -> k> = stateHandler s (k s)
stateHandler _ x = x

intStateProgram: {[State Unit, State Int]Int}
intStateProgram! = put 2; (get! + get!)

main: {[E|Console]Int}
main! = stateHandler 0 (intStateTrafo intStateProgram!)
