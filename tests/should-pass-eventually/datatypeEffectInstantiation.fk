-- When using a constructor, it is sometimes not clear how its datatype's effect
-- variables will be instantiated. The following gives an example of where
-- [E] should be instantiated by the ambient, but isn't. Therefore Console is
-- not available.
-- The problem is easily surrounded by a helper definition ouch'. Nevertheless,
-- it would be nice if this program would type-check in the future.
-- #desc   Future-feature, not a problem if this test does not succeed for now.
-- #return unit

data UnitBox [E] = ubox {[E|]Unit}

unBox: {UnitBox [Console] -> [Console]Unit}
unBox (ubox u) = u!

ouch': {Char -> [Console]Unit}
ouch' c = ouch c

main: {[Console]Unit}
main! = let bx = ubox {ouch 'c'} in unit -- It would be nice if this typed.
-- main! = let bx = ubox {ouch' 'c'} in unit -- This types indeed
