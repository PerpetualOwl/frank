include prelude

{-- Andrej Bauer's recursive cow --}
interface Cow = moo : {[Cow, Console]Unit}

cow : {[Cow,Console]Unit}
cow! = (moo!)!

eat : {<Cow>Unit -> [Console]Unit}
eat <moo -> k> = print "Moo "; eat (k cow)
eat unit       = unit

go : {[Console]Unit}
go! = eat cow!

